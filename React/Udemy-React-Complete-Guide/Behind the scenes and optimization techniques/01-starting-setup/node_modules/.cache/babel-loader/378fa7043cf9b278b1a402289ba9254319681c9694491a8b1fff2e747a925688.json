{"ast":null,"code":"var _jsxFileName = \"/Users/aciubucciu/Desktop/Practice/Last-Journey/React/Udemy-React-Complete-Guide/Behind the scenes and optimization techniques/01-starting-setup/src/App.js\",\n  _s = $RefreshSig$();\n/*\nuseCallback allows us to store a function across component execution. It allows us to tell React that I want ot save \na function and this function should not be recreated with every component execution\n*/\nimport React, { useState, useCallback } from \"react\";\nimport Button from \"./components/UI/Button/Button\";\nimport DemoOutput from \"./components/Demo/DemoOutput\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showP, setShowP] = useState(false);\n  console.log(\"app is running\");\n\n  //Basically if I know that this function will never change, I can use useCallback\n  const toggleP = useCallback(() => {\n    // setShowP(!showP);\n    setShowP(prevShowP => !prevShowP);\n  });\n  return (\n    /*#__PURE__*/\n    // The App component is rerendered when the button is clicked because the state is managed in the App omponent,\n    // even if the change vissualy affects only the DemoOutput\n    _jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hi there!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DemoOutput, {\n        show: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleP,\n        children: \"Toggle P\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"DiCVWWmB2rfvbDMeTdWW9wmMthU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Button","DemoOutput","jsxDEV","_jsxDEV","App","_s","showP","setShowP","console","log","toggleP","prevShowP","className","children","fileName","_jsxFileName","lineNumber","columnNumber","show","onClick","_c","$RefreshReg$"],"sources":["/Users/aciubucciu/Desktop/Practice/Last-Journey/React/Udemy-React-Complete-Guide/Behind the scenes and optimization techniques/01-starting-setup/src/App.js"],"sourcesContent":["/*\nuseCallback allows us to store a function across component execution. It allows us to tell React that I want ot save \na function and this function should not be recreated with every component execution\n*/\nimport React, { useState, useCallback } from \"react\";\nimport Button from \"./components/UI/Button/Button\";\nimport DemoOutput from \"./components/Demo/DemoOutput\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [showP, setShowP] = useState(false);\n\n  console.log(\"app is running\");\n\n  //Basically if I know that this function will never change, I can use useCallback\n  const toggleP = useCallback(() => {\n    // setShowP(!showP);\n    setShowP((prevShowP) => !prevShowP);\n  });\n\n  return (\n    // The App component is rerendered when the button is clicked because the state is managed in the App omponent,\n    // even if the change vissualy affects only the DemoOutput\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      {/* {showP && <p>This is the p</p>} */}\n      {/* pass false value to the show prop and see that the DemoOutput will not re-render with the memo method, but \n      if the state showP is passed trough prop, it will re-render because of the change. */}\n      <DemoOutput show={false} />\n      <Button onClick={toggleP}>Toggle P</Button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,UAAU,MAAM,8BAA8B;AAErD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzCU,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;;EAE7B;EACA,MAAMC,OAAO,GAAGX,WAAW,CAAC,MAAM;IAChC;IACAQ,QAAQ,CAAEI,SAAS,IAAK,CAACA,SAAS,CAAC;EACrC,CAAC,CAAC;EAEF;IAAA;IACE;IACA;IACAR,OAAA;MAAKS,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBV,OAAA;QAAAU,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAIlBd,OAAA,CAACF,UAAU;QAACiB,IAAI,EAAE;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3Bd,OAAA,CAACH,MAAM;QAACmB,OAAO,EAAET,OAAQ;QAAAG,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC;AAEV;AAACZ,EAAA,CAvBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}