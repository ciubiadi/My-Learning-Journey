{"ast":null,"code":"var _jsxFileName = \"/Users/aciubucciu/Desktop/Practice/Last-Journey/React/Udemy-React-Complete-Guide/Behind the scenes and optimization techniques/01-starting-setup/src/components/Demo/DemoOutput.js\";\nimport React from \"react\";\nimport MyParagraph from \"./MyParagraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DemoOutput = props => {\n  return /*#__PURE__*/_jsxDEV(MyParagraph, {\n    children: props.show ? \"This is the paragraph\" : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n};\n\n/* This is for functional components. For class based components it will not work. It allows us to optimize functional \ncomponents. The method memo tells React for the component got as an argument, it should look at the props the component\ngets and check the new value for all those props and compare with the new value of all those props. \n*/\n_c = DemoOutput;\nexport default _c2 = /*#__PURE__*/React.memo(DemoOutput);\nvar _c, _c2;\n$RefreshReg$(_c, \"DemoOutput\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","MyParagraph","jsxDEV","_jsxDEV","DemoOutput","props","children","show","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/aciubucciu/Desktop/Practice/Last-Journey/React/Udemy-React-Complete-Guide/Behind the scenes and optimization techniques/01-starting-setup/src/components/Demo/DemoOutput.js"],"sourcesContent":["import React from \"react\";\nimport MyParagraph from \"./MyParagraph\";\n\nconst DemoOutput = (props) => {\n  return <MyParagraph>{props.show ? \"This is the paragraph\" : \"\"}</MyParagraph>;\n};\n\n/* This is for functional components. For class based components it will not work. It allows us to optimize functional \ncomponents. The method memo tells React for the component got as an argument, it should look at the props the component\ngets and check the new value for all those props and compare with the new value of all those props. \n*/\nexport default React.memo(DemoOutput);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,oBAAOF,OAAA,CAACF,WAAW;IAAAK,QAAA,EAAED,KAAK,CAACE,IAAI,GAAG,uBAAuB,GAAG;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAc,CAAC;AAC/E,CAAC;;AAED;AACA;AACA;AACA;AAHAC,EAAA,GAJMR,UAAU;AAQhB,eAAAS,GAAA,gBAAeb,KAAK,CAACc,IAAI,CAACV,UAAU,CAAC;AAAC,IAAAQ,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}