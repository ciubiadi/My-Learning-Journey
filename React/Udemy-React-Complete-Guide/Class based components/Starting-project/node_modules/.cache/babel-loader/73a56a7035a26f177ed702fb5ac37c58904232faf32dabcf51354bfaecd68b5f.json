{"ast":null,"code":"var _jsxFileName = \"/Users/aciubucciu/Desktop/Practice/Last-Journey/React/Udemy-React-Complete-Guide/Class based components/Starting-project/src/components/Users.js\";\nimport { Component, useState } from \"react\";\nimport User from \"./User\";\nimport classes from \"./Users.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_USERS = [{\n  id: \"u1\",\n  name: \"Max\"\n}, {\n  id: \"u2\",\n  name: \"Manuel\"\n}, {\n  id: \"u3\",\n  name: \"Julie\"\n}];\nclass Users extends Component {\n  // to define state in class based component I use constructor\n  // [showUsers, setShowUsers] = useState(true);\n  // This construcot is automatically called whenever the class is instantiated\n  constructor() {\n    // In Class based components the state is ALWAYS stored in a object\n    // So the state is always an object and it also has to be a property named \"state\"\n    // In other words, I need to store togheter in a object all state pieces\n    this.state = {\n      showUsers: true\n    };\n  }\n  toggleUsersHandler() {\n    // setShowUsers((curState) => !curState);\n    // this.state.showUsers = false    ---- this is NOT the correct way to modidfy the state\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.users,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleUsersHandler,\n        children: [showUsers ? \"Hide\" : \"Show\", \" Users\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), showUsers && usersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? \"Hide\" : \"Show\"} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;","map":{"version":3,"names":["Component","useState","User","classes","jsxDEV","_jsxDEV","DUMMY_USERS","id","name","Users","constructor","state","showUsers","toggleUsersHandler","render","className","users","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","usersList"],"sources":["/Users/aciubucciu/Desktop/Practice/Last-Journey/React/Udemy-React-Complete-Guide/Class based components/Starting-project/src/components/Users.js"],"sourcesContent":["import { Component, useState } from \"react\";\nimport User from \"./User\";\nimport classes from \"./Users.module.css\";\n\nconst DUMMY_USERS = [\n  { id: \"u1\", name: \"Max\" },\n  { id: \"u2\", name: \"Manuel\" },\n  { id: \"u3\", name: \"Julie\" },\n];\n\nclass Users extends Component {\n  // to define state in class based component I use constructor\n  // [showUsers, setShowUsers] = useState(true);\n  // This construcot is automatically called whenever the class is instantiated\n  constructor() {\n    // In Class based components the state is ALWAYS stored in a object\n    // So the state is always an object and it also has to be a property named \"state\"\n    // In other words, I need to store togheter in a object all state pieces\n    this.state = {\n      showUsers: true,\n    };\n  }\n\n  toggleUsersHandler() {\n    // setShowUsers((curState) => !curState);\n    // this.state.showUsers = false    ---- this is NOT the correct way to modidfy the state\n  }\n\n  usersList = (\n    <ul>\n      {DUMMY_USERS.map((user) => (\n        <User key={user.id} name={user.name} />\n      ))}\n    </ul>\n  );\n\n  render() {\n    return (\n      <div className={classes.users}>\n        <button onClick={toggleUsersHandler}>\n          {showUsers ? \"Hide\" : \"Show\"} Users\n        </button>\n        {showUsers && usersList}\n      </div>\n    );\n  }\n}\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? \"Hide\" : \"Show\"} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAG,CAClB;EAAEC,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAM,CAAC,EACzB;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC5B;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,CAC5B;AAED,MAAMC,KAAK,SAAST,SAAS,CAAC;EAC5B;EACA;EACA;EACAU,WAAWA,CAAA,EAAG;IACZ;IACA;IACA;IACA,IAAI,CAACC,KAAK,GAAG;MACXC,SAAS,EAAE;IACb,CAAC;EACH;EAEAC,kBAAkBA,CAAA,EAAG;IACnB;IACA;EAAA;EAWFC,MAAMA,CAAA,EAAG;IACP,oBACET,OAAA;MAAKU,SAAS,EAAEZ,OAAO,CAACa,KAAM;MAAAC,QAAA,gBAC5BZ,OAAA;QAAQa,OAAO,EAAEL,kBAAmB;QAAAI,QAAA,GACjCL,SAAS,GAAG,MAAM,GAAG,MAAM,EAAC,QAC/B;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRV,SAAS,IAAIW,SAAS;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAEV;AACF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeb,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}