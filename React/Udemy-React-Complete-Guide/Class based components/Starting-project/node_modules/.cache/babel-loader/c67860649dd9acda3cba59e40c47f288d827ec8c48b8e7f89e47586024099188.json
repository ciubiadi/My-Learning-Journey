{"ast":null,"code":"var _jsxFileName = \"/Users/aciubucciu/Desktop/Practice/Last-Journey/React/Udemy-React-Complete-Guide/Class based components/Starting-project/src/components/Users.js\";\nimport { Component } from \"react\";\n// import { useState } from \"react\";\nimport User from \"./User\";\nimport classes from \"./Users.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Users extends Component {\n  // to define state in class based component I use constructor\n  // [showUsers, setShowUsers] = useState(true);\n  // This construcot is automatically called whenever the class is instantiated\n  constructor() {\n    super();\n    // In Class based components the state is ALWAYS stored in a object\n    // So the state is always an object and it also has to be a property named \"state\"\n    // In other words, I need to store togheter in a object all state pieces\n    this.state = {\n      showUsers: true\n    };\n  }\n  componentDidUpdate() {\n    // try {\n    // } catch (err) {}\n    if (this.props.users.length === 0) {\n      throw new Error(\"No users provioded!\");\n    }\n  }\n  toggleUsersHandler() {\n    // setShowUsers((curState) => !curState);\n    // this.state.showUsers = false    ---- this is NOT the correct way to modidfy the state\n\n    //The corect way to modify the state is the below one\n    // this.setState({\n    //   showUsers: false,\n    // });\n\n    this.setState(curState => {\n      return {\n        showusers: !curState.showUsers\n      };\n    });\n  }\n  render() {\n    const usersList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.props.users.map(user => /*#__PURE__*/_jsxDEV(User, {\n        name: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.users,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleUsersHandler.bind(this),\n        children: [this.state.showUsers ? \"Hide\" : \"Show\", \" Users\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), this.state.showUsers && usersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? \"Hide\" : \"Show\"} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;","map":{"version":3,"names":["Component","User","classes","jsxDEV","_jsxDEV","Users","constructor","state","showUsers","componentDidUpdate","props","users","length","Error","toggleUsersHandler","setState","curState","showusers","render","usersList","children","map","user","name","id","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","bind"],"sources":["/Users/aciubucciu/Desktop/Practice/Last-Journey/React/Udemy-React-Complete-Guide/Class based components/Starting-project/src/components/Users.js"],"sourcesContent":["import { Component } from \"react\";\n// import { useState } from \"react\";\nimport User from \"./User\";\nimport classes from \"./Users.module.css\";\n\nclass Users extends Component {\n  // to define state in class based component I use constructor\n  // [showUsers, setShowUsers] = useState(true);\n  // This construcot is automatically called whenever the class is instantiated\n  constructor() {\n    super();\n    // In Class based components the state is ALWAYS stored in a object\n    // So the state is always an object and it also has to be a property named \"state\"\n    // In other words, I need to store togheter in a object all state pieces\n    this.state = {\n      showUsers: true,\n    };\n  }\n\n  componentDidUpdate() {\n    // try {\n    // } catch (err) {}\n    if (this.props.users.length === 0) {\n      throw new Error(\"No users provioded!\");\n    }\n  }\n\n  toggleUsersHandler() {\n    // setShowUsers((curState) => !curState);\n    // this.state.showUsers = false    ---- this is NOT the correct way to modidfy the state\n\n    //The corect way to modify the state is the below one\n    // this.setState({\n    //   showUsers: false,\n    // });\n\n    this.setState((curState) => {\n      return {\n        showusers: !curState.showUsers,\n      };\n    });\n  }\n\n  render() {\n    const usersList = (\n      <ul>\n        {this.props.users.map((user) => (\n          <User key={user.id} name={user.name} />\n        ))}\n      </ul>\n    );\n    return (\n      <div className={classes.users}>\n        <button onClick={this.toggleUsersHandler.bind(this)}>\n          {this.state.showUsers ? \"Hide\" : \"Show\"} Users\n        </button>\n        {this.state.showUsers && usersList}\n      </div>\n    );\n  }\n}\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? \"Hide\" : \"Show\"} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,KAAK,SAASL,SAAS,CAAC;EAC5B;EACA;EACA;EACAM,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP;IACA;IACA;IACA,IAAI,CAACC,KAAK,GAAG;MACXC,SAAS,EAAE;IACb,CAAC;EACH;EAEAC,kBAAkBA,CAAA,EAAG;IACnB;IACA;IACA,IAAI,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACjC,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACxC;EACF;EAEAC,kBAAkBA,CAAA,EAAG;IACnB;IACA;;IAEA;IACA;IACA;IACA;;IAEA,IAAI,CAACC,QAAQ,CAAEC,QAAQ,IAAK;MAC1B,OAAO;QACLC,SAAS,EAAE,CAACD,QAAQ,CAACR;MACvB,CAAC;IACH,CAAC,CAAC;EACJ;EAEAU,MAAMA,CAAA,EAAG;IACP,MAAMC,SAAS,gBACbf,OAAA;MAAAgB,QAAA,EACG,IAAI,CAACV,KAAK,CAACC,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACzBlB,OAAA,CAACH,IAAI;QAAesB,IAAI,EAAED,IAAI,CAACC;MAAK,GAAzBD,IAAI,CAACE,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;IACD,oBACExB,OAAA;MAAKyB,SAAS,EAAE3B,OAAO,CAACS,KAAM;MAAAS,QAAA,gBAC5BhB,OAAA;QAAQ0B,OAAO,EAAE,IAAI,CAAChB,kBAAkB,CAACiB,IAAI,CAAC,IAAI,CAAE;QAAAX,QAAA,GACjD,IAAI,CAACb,KAAK,CAACC,SAAS,GAAG,MAAM,GAAG,MAAM,EAAC,QAC1C;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR,IAAI,CAACrB,KAAK,CAACC,SAAS,IAAIW,SAAS;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAEV;AACF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAevB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}