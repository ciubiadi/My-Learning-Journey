{"ast":null,"code":"var _jsxFileName = \"/Users/aciubucciu/Desktop/Personal/Learning/My-Learning-Journey/React/Udemy-React-Complete-Guide/FullStackJS/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  //   const [isLoading, setIsLoading] = useState(false);\n  //   const [fetchedEvents, setFetchedEvents] = useState();\n  //   const [error, setError] = useState();\n\n  //   useEffect(() => {\n  //     async function fetchEvents() {\n  //       setIsLoading(true);\n  //   const response = await fetch('http://localhost:8080/events');\n\n  //   if (!response.ok) {\n  //     setError('Fetching events failed.');\n  //   } else {\n  //     const resData = await response.json();\n  //     setFetchedEvents(resData.events);\n  //   }\n  //       setIsLoading(false);\n  //     }\n\n  //     fetchEvents();\n  //   }, []);\n\n  const events = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useEffect","useState","useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aciubucciu/Desktop/Personal/Learning/My-Learning-Journey/React/Udemy-React-Complete-Guide/FullStackJS/frontend/src/pages/Events.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [fetchedEvents, setFetchedEvents] = useState();\n//   const [error, setError] = useState();\n\n//   useEffect(() => {\n//     async function fetchEvents() {\n//       setIsLoading(true);\n    //   const response = await fetch('http://localhost:8080/events');\n\n    //   if (!response.ok) {\n    //     setError('Fetching events failed.');\n    //   } else {\n    //     const resData = await response.json();\n    //     setFetchedEvents(resData.events);\n    //   }\n//       setIsLoading(false);\n//     }\n\n//     fetchEvents();\n//   }, []);\n\n    const events = useLoaderData();\n\n  return (\n    <>\n    {/* Approach #1 */}\n      {/* <div style={{ textAlign: 'center' }}>\n        {isLoading && <p>Loading...</p>}\n        {error && <p>{error}</p>}\n      </div> */}\n      {/* {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />} */}\n\n      {/* Appraoch #2 */}\n      <EventsList events={events} />\n\n      {/* Approach #3 */}\n      {/* <EventsList /> */}\n    </>\n  );\n}\n\nexport default EventsPage;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACtB;EACA;EACA;;EAEA;EACA;EACA;EACI;;EAEA;EACA;EACA;EACA;EACA;EACA;EACJ;EACA;;EAEA;EACA;;EAEI,MAAMC,MAAM,GAAGR,aAAa,CAAC,CAAC;EAEhC,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eASEN,OAAA,CAACF,UAAU;MAACO,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAI9B,CAAC;AAEP;AAACN,EAAA,CAxCQD,UAAU;EAAA,QAsBAN,aAAa;AAAA;AAAAc,EAAA,GAtBvBR,UAAU;AA0CnB,eAAeA,UAAU;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}