{"ast":null,"code":"var _jsxFileName = \"/Users/aciubucciu/Desktop/Personal/Learning/My-Learning-Journey/React/Udemy-React-Complete-Guide/FullStackJS/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams, useRouteLoaderData, useLoaderData, json, redirect, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  // const {eventId} = useParams();\n  // const params = useParams();\n  // const allparams = useParams();\n\n  // const showParams = (e) => {\n  //     e.preventDefault();\n  //     console.log(allparams);\n  // }\n\n  // const data = useLoaderData()\n  // const data = useRouteLoaderData('event-detail')\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: loadedEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailPage, \"OA7jEBfO3UI1aCR8ByPCigEHUtE=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const res = await fetch('http://localhost:8080/events/' + id);\n  if (!res.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await res.json();\n    return resData.events;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    // return response;\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\n/* React Router which calles this loader function for me, actually passes an object to this loader function when \nexecuting it for me, and that object contains 2 improtant pieces of data :\n1. A request property which contains a request object\n2. A params property which contains an object with all my route parameters.\n\nThe request object could be used to access the URL to extract query parameters or anything like that\nThe params object I can access all the route parameter values as I could do with the help of useParams.\n*/\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n  // const res = await fetch('http://localhost:8080/events/' + id);\n  // if(!res.ok){\n  //     throw json({message: 'Could not fetch details for selected event.'}, {\n  //         status: 500\n  //     })\n  // } else {\n  //     return res;\n  // }\n}\n\n// delete an event\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","useRouteLoaderData","useLoaderData","json","redirect","defer","Await","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","resolve","loadedEvent","fileName","_jsxFileName","lineNumber","columnNumber","loadedEvents","_c","loadEvent","id","res","fetch","ok","message","status","resData","loadEvents","response","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["/Users/aciubucciu/Desktop/Personal/Learning/My-Learning-Journey/React/Udemy-React-Complete-Guide/FullStackJS/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useParams, useRouteLoaderData, useLoaderData, json, redirect, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\n\nconst EventDetailPage = () => {\n    // const {eventId} = useParams();\n    // const params = useParams();\n    // const allparams = useParams();\n\n    // const showParams = (e) => {\n    //     e.preventDefault();\n    //     console.log(allparams);\n    // }\n\n    // const data = useLoaderData()\n    // const data = useRouteLoaderData('event-detail')\n    const {event, events} = useRouteLoaderData('event-detail');\n\n    return (\n        <>\n            <Await resolve={event}>\n                {loadedEvent => <EventItem event={loadedEvent} /> }\n            </Await>\n            <Await resolve={events}>\n                {loadedEvents => <EventsList events={loadedEvents}/>}\n            </Await>\n            {/* <EventItem event={data.event} /> */}\n            {/* <EventsList events={events}/> */}\n            {/* <h1>EditEventPage</h1>\n            <p>Event ID: {eventId}</p> */}\n\n            {/* <p>Event ID: {params.eventId}</p> */}\n            {/* <button onClick={showParams}>Show all params</button> */}\n        </>\n    );\n}\n\nexport default EventDetailPage;\n\nasync function loadEvent(id){\n    const res = await fetch('http://localhost:8080/events/' + id);\n    if(!res.ok){\n        throw json({message: 'Could not fetch details for selected event.'}, {\n            status: 500\n        })\n    } else {\n        const resData = await res.json();\n        return resData.events;\n    }\n}\n\nasync function loadEvents () {\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n        throw json(\n            {message: 'Could not fetch events.'}, \n            {\n                status: 500,\n            }\n        );\n    } else {\n        // return response;\n        const resData = await response.json();\n        return resData.events;\n    }\n}\n\n\n/* React Router which calles this loader function for me, actually passes an object to this loader function when \nexecuting it for me, and that object contains 2 improtant pieces of data :\n1. A request property which contains a request object\n2. A params property which contains an object with all my route parameters.\n\nThe request object could be used to access the URL to extract query parameters or anything like that\nThe params object I can access all the route parameter values as I could do with the help of useParams.\n*/\nexport async function loader({request, params}) {\n    const id = params.eventId;\n\n    return defer({\n        event: loadEvent(id),\n        events: loadEvents()\n    });\n    // const res = await fetch('http://localhost:8080/events/' + id);\n    // if(!res.ok){\n    //     throw json({message: 'Could not fetch details for selected event.'}, {\n    //         status: 500\n    //     })\n    // } else {\n    //     return res;\n    // }\n}\n\n// delete an event\nexport async function action({ params, request }) {\n    const eventId = params.eventId;\n    const response = await fetch('http://localhost:8080/events/' + eventId, {\n      method: request.method,\n    });\n  \n    if (!response.ok) {\n      throw json(\n        { message: 'Could not delete event.' },\n        {\n          status: 500,\n        }\n      );\n    }\n    return redirect('/events');\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}