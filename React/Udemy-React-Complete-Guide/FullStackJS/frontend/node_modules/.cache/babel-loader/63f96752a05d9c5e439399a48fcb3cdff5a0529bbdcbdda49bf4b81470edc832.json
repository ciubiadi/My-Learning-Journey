{"ast":null,"code":"var _jsxFileName = \"/Users/aciubucciu/Desktop/Personal/Learning/My-Learning-Journey/React/Udemy-React-Complete-Guide/FullStackJS/frontend/src/components/EventForm.js\",\n  _s = $RefreshSig$();\nimport { Form, useNavigate, useNavigation, useActionData, json, redirect } from 'react-router-dom';\nimport classes from './EventForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm(props) {\n  _s();\n  const data = useActionData();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n\n  // it does basically the same thing as useLoaderData - it gives me access to the data returned by my action\n  const actionData = useActionData();\n  const isSubmitting = navigation.state === 'submitting';\n  function cancelHandler() {\n    navigate('..');\n  }\n  function cancelHandler() {\n    navigate('..');\n  }\n  return (\n    /*#__PURE__*/\n    /* This Form tag will make sure that the borwser default of sending a request to the backend will be omitted\n     but it will take that request that would have been sent and give it to my action. So the request will contain all\n     the data that was submitted as part of the form. The request will not be sent automatically to the backend\n     but instead to my action. */\n    _jsxDEV(Form, {\n      method: props.method,\n      className: classes.form,\n      children: [actionData && actionData.errors && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.values(actionData.errors).map(error => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, error, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 56\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          type: \"text\",\n          name: \"title\",\n          required: true,\n          defaultValue: props.event ? props.event.title : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image\",\n          type: \"url\",\n          name: \"image\",\n          required: true,\n          defaultValue: props.event ? props.event.image : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date\",\n          type: \"date\",\n          name: \"date\",\n          required: true,\n          defaultValue: props.event ? props.event.date : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          rows: \"5\",\n          required: true,\n          defaultValue: props.event ? props.event.description : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: cancelHandler,\n          disabled: isSubmitting,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Submitting...' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(EventForm, \"2QlBE5HPmyVcZ63H5OISgijrZS0=\", false, function () {\n  return [useActionData, useNavigate, useNavigation, useActionData];\n});\n_c = EventForm;\nexport default EventForm;\nexport async function action({\n  request,\n  params\n}) {\n  const method = request.method;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n\n  // for creating a new event\n  let url = 'http://localhost:8080/events';\n  if (method === 'PATCH') {\n    const eventId = params.eventId;\n    url = 'http://localhost:8080/events/' + eventId;\n  }\n  const response = await fetch(url, {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n\n  // 422 is the validation status code I am setting in backend\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["Form","useNavigate","useNavigation","useActionData","json","redirect","classes","jsxDEV","_jsxDEV","EventForm","props","_s","data","navigate","navigation","actionData","isSubmitting","state","cancelHandler","method","className","form","children","errors","Object","values","map","error","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","name","required","defaultValue","event","title","image","date","rows","description","actions","onClick","disabled","_c","action","request","params","formData","eventData","get","url","eventId","response","fetch","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["/Users/aciubucciu/Desktop/Personal/Learning/My-Learning-Journey/React/Udemy-React-Complete-Guide/FullStackJS/frontend/src/components/EventForm.js"],"sourcesContent":["import { Form, useNavigate, useNavigation, useActionData, json, redirect } from 'react-router-dom';\n\nimport classes from './EventForm.module.css';\n\nfunction EventForm(props) {\n  const data = useActionData();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n\n  // it does basically the same thing as useLoaderData - it gives me access to the data returned by my action\n  const actionData = useActionData();\n\n  const isSubmitting = navigation.state === 'submitting';\n\n  function cancelHandler() {\n    navigate('..');\n  }\n\n  function cancelHandler() {\n    navigate('..');\n  }\n\n  return (\n    /* This Form tag will make sure that the borwser default of sending a request to the backend will be omitted\n     but it will take that request that would have been sent and give it to my action. So the request will contain all\n     the data that was submitted as part of the form. The request will not be sent automatically to the backend\n     but instead to my action. */\n    <Form method={props.method} className={classes.form}>\n      {actionData && actionData.errors && <ul>\n        {Object.values(actionData.errors).map(error => <li key={error}>{error}</li>)}\n        </ul>}\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input \n          id=\"title\" \n          type=\"text\" \n          name=\"title\" \n          required \n          defaultValue={props.event ? props.event.title : ''} \n        />\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input \n          id=\"image\" \n          type=\"url\" \n          name=\"image\" \n          required \n          defaultValue={props.event ? props.event.image : ''}\n          />\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input \n          id=\"date\" \n          type=\"date\" \n          name=\"date\" \n          required \n          defaultValue={props.event ? props.event.date : ''}\n          />\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea \n          id=\"description\" \n          name=\"description\" \n          rows=\"5\" \n          required \n          defaultValue={props.event ? props.event.description : ''}\n          />\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler} disabled={isSubmitting}>\n          Cancel\n        </button>\n        <button disabled={isSubmitting}>{isSubmitting ? 'Submitting...' : 'Save'}</button>\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\nexport async function action({request, params}) {\n  const method = request.method;\n  const data = await request.formData();\n  const eventData = {\n      title: data.get('title'),\n      image: data.get('image'),\n      date: data.get('date'),\n      description: data.get('description')\n  };\n\n  // for creating a new event\n  let url = 'http://localhost:8080/events';\n\n  if(method === 'PATCH'){\n    const eventId = params.eventId;\n    url = 'http://localhost:8080/events/' + eventId;\n  }\n\n  const response = await fetch(url, {\n      method: method,\n      headers: {\n          'Content-Type':'application/json'\n      },\n      body: JSON.stringify(eventData)\n  });\n\n  // 422 is the validation status code I am setting in backend\n  if(response.status === 422){\n      return response;\n  }\n\n  if(!response.ok){\n      throw json({ message: 'Could not save event.' }, { status: 500 })\n  }\n\n  return redirect('/events');\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}