{"ast":null,"code":"var _jsxFileName = \"/Users/aciubucciu/Desktop/Personal/Learning/My-Learning-Journey/React/Udemy-React-Complete-Guide/Advanced-Redux/Redux Project/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const showCart = useSelector(state => state.toggleCart.showCart);\n  const cart = useSelector(state => state.cart);\n\n  /* watch for changes in the cart state*, because useEffect run side effects \n    so it will help me to run an effect whenever soome dependency changes */\n\n  /* PUT vs POST => PUT request will also store data to Firebase, but the new data will not be added in a list of data,\n  it will OVERRIDE the EXISTING data. */\n  useEffect(() => {\n    const sendCartData = async () => {\n      const response = await fetch('https://react-http-8fe27-default-rtdb.europe-west1.firebasedatabase.app/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      const responseData = await response.json();\n    };\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KyXbg3VUjMrWtfZdDW0tXImD8Js=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Cart","Layout","Products","useSelector","jsxDEV","_jsxDEV","App","_s","showCart","state","toggleCart","cart","sendCartData","response","fetch","method","body","JSON","stringify","responseData","json","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aciubucciu/Desktop/Personal/Learning/My-Learning-Journey/React/Udemy-React-Complete-Guide/Advanced-Redux/Redux Project/src/App.js"],"sourcesContent":["import { useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\n\nfunction App() {\n  const showCart = useSelector((state) => state.toggleCart.showCart)\n  const cart = useSelector(state => state.cart);\n\n  /* watch for changes in the cart state*, because useEffect run side effects \n    so it will help me to run an effect whenever soome dependency changes */  \n\n    /* PUT vs POST => PUT request will also store data to Firebase, but the new data will not be added in a list of data,\n    it will OVERRIDE the EXISTING data. */\n  useEffect(() => {\n    const sendCartData = async () => {\n      const response = await fetch('https://react-http-8fe27-default-rtdb.europe-west1.firebasedatabase.app/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart) \n      });\n\n      const responseData = await response.json();\n    }\n  }, [cart]);\n\n\n  return (\n    <Layout>\n     { showCart && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,WAAW,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACC,UAAU,CAACF,QAAQ,CAAC;EAClE,MAAMG,IAAI,GAAGR,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACE,IAAI,CAAC;;EAE7C;AACF;;EAEI;AACJ;EACEZ,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mFAAmF,EAAE;QAChHC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;MAC3B,CAAC,CAAC;MAEF,MAAMQ,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC5C,CAAC;EACH,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAGV,oBACEN,OAAA,CAACJ,MAAM;IAAAoB,QAAA,GACJb,QAAQ,iBAAIH,OAAA,CAACL,IAAI;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrBpB,OAAA,CAACH,QAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEb;AAAClB,EAAA,CA3BQD,GAAG;EAAA,QACOH,WAAW,EACfA,WAAW;AAAA;AAAAuB,EAAA,GAFjBpB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}