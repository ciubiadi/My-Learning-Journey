{"ast":null,"code":"var _jsxFileName = \"/Users/aciubucciu/Desktop/Personal/Learning/My-Learning-Journey/React/Udemy-React-Complete-Guide/Advanced-Redux/Redux Project/src/App.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setNotification } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const showCartVar = useSelector(state => state.ui.showCart);\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.ui.notification);\n\n  /* watch for changes in the cart state*, because useEffect run side effects \n    so it will help me to run an effect whenever soome dependency changes */\n\n  /* PUT vs POST => PUT request will also store data to Firebase, but the new data will not be added in a list of data,\n  it will OVERRIDE the EXISTING data. */\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(setNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!'\n      }));\n      const response = await fetch('https://react-http-8fe27-default-rtdb.europe-west1.firebasedatabase.app/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n        // dispatch(setNotification({\n        //     status: 'error',\n        //     title: 'Error...',\n        //     message: 'Sending cart data failed'\n        //   })\n        // );\n      }\n\n      // const responseData = await response.json();\n\n      dispatch(setNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data succesfully!'\n      }));\n    };\n    sendCartData().catch(error => {\n      dispatch(setNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Sending cart data failed'\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7CS7QpFn9T+wapltbRIqip7dLEg=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","Cart","Layout","Products","useSelector","useDispatch","setNotification","Notification","jsxDEV","_jsxDEV","App","_s","showCartVar","state","ui","showCart","cart","dispatch","notification","sendCartData","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aciubucciu/Desktop/Personal/Learning/My-Learning-Journey/React/Udemy-React-Complete-Guide/Advanced-Redux/Redux Project/src/App.js"],"sourcesContent":["import { Fragment, useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setNotification } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\n\nfunction App() {\n  const showCartVar = useSelector((state) => state.ui.showCart);\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.ui.notification);\n\n  /* watch for changes in the cart state*, because useEffect run side effects \n    so it will help me to run an effect whenever soome dependency changes */  \n\n  /* PUT vs POST => PUT request will also store data to Firebase, but the new data will not be added in a list of data,\n  it will OVERRIDE the EXISTING data. */\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(\n        setNotification({\n          status: 'pending',\n          title: 'Sending...',\n          message: 'Sending cart data!'\n        })\n      );\n      const response = await fetch(\n        'https://react-http-8fe27-default-rtdb.europe-west1.firebasedatabase.app/cart.json', \n        {\n          method: 'PUT',\n          body: JSON.stringify(cart) \n        }\n      );\n\n      if(!response.ok){\n        throw new Error('Sending cart data failed');\n        // dispatch(setNotification({\n        //     status: 'error',\n        //     title: 'Error...',\n        //     message: 'Sending cart data failed'\n        //   })\n        // );\n      }\n\n      // const responseData = await response.json();\n\n      dispatch(\n        setNotification({\n          status: 'success',\n          title: 'Success!',\n          message: 'Sent cart data succesfully!'\n        })\n      );\n    }\n\n    sendCartData().catch(error => {\n      dispatch(\n        setNotification({\n          status: 'error',\n          title: 'Error...',\n          message: 'Sending cart data failed'\n        })\n      );\n    });\n  }, [cart, dispatch]);\n\n\n  return (\n    <Fragment>\n      {notification && ( \n        <Notification \n          status={notification.status} \n          title={notification.title} \n          message={notification.message} \n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}